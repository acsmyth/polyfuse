name: CI

on:
  push:
    branches:
      - master
      - staging
      - trying

env:
  CARGO_HUSKY_DONT_INSTALL_HOOKS: true
  CARGO_TERM_VERBOSE: true

jobs:
  Test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1 # FIXME: upgrade to v2
      with:
        submodules: true

    - name: Install APT dependencies
      run: |
        sudo apt-get update -yqq
        sudo apt-get install -yqq --no-install-recommends fuse

    - name: Install Rust toolchains
      run: |
        rustup set profile minimal
        rustup install stable beta nightly 1.40.0
        rustup component add rustfmt clippy --toolchain stable

    - name: Generate Cargo.lock
      run: cargo generate-lockfile

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Fetch cargo dependencies
      run: cargo fetch

    - name: Run tests (stable)
      run: cargo +stable xtask test
      env:
        RUSTFLAGS: "-D warnings"

    - name: Run tests (beta)
      run: cargo +beta xtask test
      env:
        RUSTFLAGS: "-D warnings"

    - name: Run tests (nightly)
      run: cargo +nightly xtask test

    - name: Run tests (minimal supported toolchain)
      run: cargo +1.40.0 xtask test

    - name: Install cargo-tarpaulin
      run: |
        curl -L https://github.com/xd009642/tarpaulin/releases/download/0.10.0/cargo-tarpaulin-0.10.0-travis.tar.gz | tar zxf -
        mkdir -pv $HOME/.cargo/bin
        mv -v ./cargo-tarpaulin $HOME/.cargo/bin
        echo ::add-path::$HOME/.cargo/bin
      if: matrix.conf.coverage == true

    - name: Run coverage test
      run: cargo +stable xtask coverage
      if: matrix.conf.coverage == true

    - name: Send report to Codecov
      uses: codecov/codecov-action@v1.0.3
      if: success() && matrix.conf.coverage == true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/cov/cobertura.xml
